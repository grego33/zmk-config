/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td_caps_lock: td_caps_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt ESC TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL      &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&td_caps_lock  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                             &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        nums_nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1        &kp N2        &kp N3              &kp N4               &kp N5          &trans   &trans          &kp UP_ARROW    &trans     &trans  &kp BSPC
&trans   &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8        &kp NUMBER_9         &kp NUMBER_0    &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans   &trans        &trans        &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &mo 3           &trans   &trans          &trans          &trans     &trans  &trans
                                     &kp LGUI            &trans               &kp SPACE       &kp RET  &trans          &kp RALT
            >;
        };

        punctuation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL        &kp AT     &kp HASH           &kp DLLR               &kp PRCNT          &kp CARET  &kp AMPS        &kp ASTRK       &kp LPAR         &kp RPAR  &kp DELETE
&kp LCTRL  &kp MINUS       &kp EQUAL  &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE     &trans     &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &kp BSLH  &kp GRAVE
&trans     &kp UNDERSCORE  &kp PLUS   &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &trans     &trans          &kp DOWN_ARROW  &trans           &kp PIPE  &kp TILDE
                                      &kp LGUI           &trans                 &kp SPACE          &kp RET    &trans          &kp RALT
            >;
        };

        keyboard_controls {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
